version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:20.11
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install frontend dependencies
          command: |
            cd crud-todos
            npm install
      - run:
          name: Run frontend tests
          command: |
            cd crud-todos
            npm test -- --watchAll=false
      - run:
          name: Build frontend
          command: |
            cd crud-todos
            npm run build
      - run:
          name: Install backend dependencies
          command: |
            cd crud-todos-backend
            npm install
      - run:
          name: Build and push Docker image
          command: |
            cd crud-todos-backend
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker build -t $IMAGE_NAME:latest .
            docker push $IMAGE_NAME:latest
      - run:
          name: Archive frontend build
          command: |
            tar -czf frontend-build.tar.gz -C crud-todos/build .
      - run:
          name: Archive backend
          command: |
            tar -czf backend.tar.gz -C crud-todos-backend .
      - persist_to_workspace:
          root: .
          paths:
            - frontend-build.tar.gz
            - backend.tar.gz

  deploy:
    docker:
      - image: cimg/node:20.11
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "SHA256:m+Ex21QZsb6Guo4aAsuG3tBIcdSs612z1SOoqk9kSB0"
      - run:
          name: Free up disk space on EC2
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@13.61.122.171 \<< 'EOF'
              echo 'Freeing up space...';
              docker system prune -a -f;
              sudo apt-get autoremove -y;
              sudo apt-get clean;
              echo 'Disk cleanup completed.';
            EOF
      - run:
          name: Deploy to EC2
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@13.61.122.171 \<< 'EOF'
              sudo chown -R ubuntu:ubuntu /var/www/html;
              sudo chmod -R 755 /var/www/html;
              rm -rf /var/www/html/*;
              mkdir -p /home/ubuntu/crud-app/crud-todos;
              mkdir -p /home/ubuntu/crud-app/crud-todos-backend;
            EOF
            
            scp -o StrictHostKeyChecking=no frontend-build.tar.gz ubuntu@13.61.122.171:/home/ubuntu/crud-app/
            scp -o StrictHostKeyChecking=no backend.tar.gz ubuntu@13.61.122.171:/home/ubuntu/crud-app/
            
            ssh -o StrictHostKeyChecking=no ubuntu@13.61.122.171 << EOF
              tar -xzf /home/ubuntu/crud-app/frontend-build.tar.gz -C /var/www/html/;
              tar -xzf /home/ubuntu/crud-app/backend.tar.gz -C /home/ubuntu/crud-app/crud-todos-backend/;
              docker pull $IMAGE_NAME:latest;
              docker stop crud-todos-backend || true;
              docker rm crud-todos-backend || true;
              sudo ss -tulnp | grep 8082 || echo 'No process on 8082 before cleanup';
              sudo fuser -k 8082/tcp || true;
              sleep 2;
              sudo ss -tulnp | grep 8082 || echo 'No process on 8082 after cleanup';
              docker run -d --name crud-todos-backend -p 8082:8082 $IMAGE_NAME:latest;
            EOF

workflows:
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
